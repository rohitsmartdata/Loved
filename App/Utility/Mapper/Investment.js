/* eslint-disable no-trailing-spaces,key-spacing */
/**
 * Created by demon on 26/4/18.
 */

// ========================================================
// ADD_GOAL Component
// ========================================================

// Entities
export const INVESTMENT_ENTITIES = {

  // ----- BUSINESS entities -----

  INVESTMENT_ID: 'investmentID',

  INVESTMENT_NAME   : 'name',       // string is similar to GOAL_ENTITIES.NAME

  INVESTMENT_RISK_ID: 'portfolioRisk',      // string is similar to GOAL_ENTITIES.PORTFOLIO_RISK

  INVESTMENT_TICKER_NAME: 'tickerName',     // ticker name of the investment

  INVESTMENT_INTERNAL_ID: 'investmentInternalID',   // internal id used to map investments on phone

  INVESTMENT_PATH_ID: 'investmentPathID',

  INVESTMENT_AMOUNT : 'recurringAmount',

  INVESTMENT_BALANCE: 'investmentBalance',

  CURRENT_VALUE: 'currentValue',
  PENDING_TRANSFER_AMOUNT: 'pendingTransferAmount',
  PENDING_WITHDRAWAL_AMOUNT: 'pendingWithdrawalAmount',

  INVESTMENT_TOTAL_CONTRIBUTION: 'investmentTotalContribution',

  INVESTMENT_FREQUENCY: 'recurringFrequency',

  INVESTMENT_RECURRING_ID: 'investmentRecurringID',
  INVESTMENT_RECURRING_AMOUNT: 'investmentRecurringAmount',
  INVESTMENT_RECURRING_FREQUENCY: 'investmentRecurringFrequency',
  INVESTMENT_RECURRING_NEXT_DATE: 'investmentRecurringNextDate',
  INVESTMENT_RECURRING_STATUS: 'investmentRecurringStatus',
  INVESTMENT_RECURRING_TYPE: 'investmentRecurringType',

  // transfers detail
  TRANSACTIONS: 'transactions',
  // single transaction object
  TRANSACTION: 'transaction',

  TRANSACTION_ID: 'transactionID',
  TRANSACTION_AMOUNT: 'transactionAmount',
  TRANSACTION_STATUS: 'transactionStatus',
  TRANSACTION_TYPE: 'transactionType',
  TRANSACTION_TIME: 'transactionTime',
  TRANSACTION_STOCKS: 'transactionStocks',

  IS_INVESTMENT: 'isInvestment',

  IS_RECURRENCE_INVESTMENT_EXIST: 'isRecurrenceInvestmentExist',

  // transfer instructions over goal
  INSTRUCTIONS: 'instructions',
  // instruction ID
  INSTRUCTION_ID: 'instructionID',
  // amount to be transferred
  INSTRUCTION_AMOUNT: 'instructionAmount',
  // frequency of amount to be transferred
  INSTRUCTION_FREQUENCY: 'instructionFrequency',
  // initial request time of instruction
  INSTRUCTION_INITIAL_REQUEST_DATE: 'instructionInitialRequestDate',
  // next transfer date of instruction
  INSTRUCTION_NEXT_TRANSFER_DATE: 'instructionNextTransferDate',
  // status of instructino
  INSTRUCTION_STATUS: 'instructionStatus',
  // instruction type
  INSTRUCTION_TYPE: 'instructionType',

  GROWTH_IN_PERCENTAGE: 'growthInPercentage',
  GROWTH_IN_VALUE: 'growthInValue',
  LAST_UPDATED_TIME: 'lastUpdatedTime',

  STOCKS: 'stocks',
  STOCK_TICKER: 'stockTicker',
  STOCK_NAME: 'stockName',
  STOCK_AMOUNT: 'stockAmount',
  STOCK_CURRENT_VALUE: 'stockCurrentValue',
  STOCK_UNIT_PRICE: 'stockUnitPrice',
  STOCK_UNITS: 'stockUnits',
  STOCK_GROWTH_IN_PERCENTAGE: 'stockGrowthInPercentage',
  STOCK_GROWTH_IN_VALUE: 'stockGrowthInValue',
  STOCK_AVAILABLE_UNITS: 'stockAvailableUnits',
  STOCK_INVESTED_AMOUNT: 'stockInvestedAmount',

  // transfers detail
  DUMMY_TRANSACTIONS: 'dummyTransactions',
  // single transaction object
  DUMMY_TRANSACTION: 'dummyTransaction',

  DUMMY_TRANSACTION_REFERENCE_ID: 'dummyTransactionReferenceID',
  DUMMY_TRANSACTION_AMOUNT: 'dummyTransactionAmount',
  DUMMY_TRANSACTION_STATUS: 'dummyTransactionStatus',
  DUMMY_TRANSACTION_TIME: 'dummyTransactionTime',

  IS_DISPLAY_ONLY: 'isDisplayOnly',

  PRODUCT: 'product',
  PRODUCT_TICKER: 'productTicker',
  PRODUCT_PORTFOLIO_ID: 'productPortfolioID',
  PRODUCT_TYPE: 'productType',
  PRODUCT_NAME: 'productName',
  PRODUCT_WHAT_IS_INVESTMENT: 'productWhatIsTheInvestment',
  PRODUCT_DESCRIPTION: 'productDescription',
  PRODUCT_BACKDROP_IMAGE_URL: 'productBackdropImageURL',
  PRODUCT_IMAGE_URL: 'productImageURL',
  PRODUCT_BOOST_AMOUNT: 'productBoostAmount',
  PRODUCT_SHOW_CHART: 'productShowChart',

  NATIVE_PRODUCTS: 'nativeProducts',

  PRODUCT_IMAGES: 'images',
  PRODUCT_IMAGE: 'image',

  // ----- Storage specific entities -----

  INVESTMENTS: 'investments',

  INVESTMENTS_DATA: 'investmentData',

  INVESTMENT_INDEX: 'INVESTMENT_INDEX',

  CID_INDEX: 'CID_INDEX',

  CHILD_MAP: 'CHILD_MAP',

  PRODUCTS: 'products',
  // PRODUCTS: 'PRODUCTS',

  TYPES: 'types',
  TYPE: 'type',
  PRIORITY: 'priority',

  // ----- UTILITY entities -----

  // are there any error's in goal module functioining
  IS_OK     : 'OK',
  // error related to goal module
  ERROR     : 'ERROR',
  // processing index tag
  PROCESSING: 'PROCESSING',

  PROCESSING_ADD_INVESTMENT: 'processingAddInvestment',
  PROCESSING_FETCH_PRODUCTS: 'processingFetchProducts',
  PROCESSING_FETCH_USER_INSTRUCTIONS: 'processingFetchUserInstructions'

}

// --------------------------------------------------------------------------------
// Path of Entities in STORE

export function path (ENTITIY) {
  switch (ENTITIY) {

    case INVESTMENT_ENTITIES.INVESTMENTS:
      return () => [INVESTMENT_ENTITIES.INVESTMENTS]

    case INVESTMENT_ENTITIES.TYPES:
      return () => [INVESTMENT_ENTITIES.TYPES]

    case INVESTMENT_ENTITIES.TYPE:
      return (type) => [INVESTMENT_ENTITIES.TYPES, type, INVESTMENT_ENTITIES.TYPE]

    case INVESTMENT_ENTITIES.PRIORITY:
      return (type) => [INVESTMENT_ENTITIES.TYPES, type, INVESTMENT_ENTITIES.PRIORITY]

    case INVESTMENT_ENTITIES.NATIVE_PRODUCTS:
      return (type) => [INVESTMENT_ENTITIES.NATIVE_PRODUCTS]

    case INVESTMENT_ENTITIES.PRODUCTS:
      return () => [INVESTMENT_ENTITIES.PRODUCTS]

    case INVESTMENT_ENTITIES.PRODUCT:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker]

    case INVESTMENT_ENTITIES.PRODUCT_IMAGE:
      return (ticker) => [INVESTMENT_ENTITIES.PRODUCT_IMAGES, ticker]

    case INVESTMENT_ENTITIES.PRODUCT_TICKER:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_TICKER]

    case INVESTMENT_ENTITIES.PRODUCT_PORTFOLIO_ID:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_PORTFOLIO_ID]

    case INVESTMENT_ENTITIES.PRODUCT_TYPE:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_TYPE]

    case INVESTMENT_ENTITIES.PRODUCT_NAME:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_NAME]

    case INVESTMENT_ENTITIES.PRODUCT_WHAT_IS_INVESTMENT:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_WHAT_IS_INVESTMENT]

    case INVESTMENT_ENTITIES.PRODUCT_DESCRIPTION:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_DESCRIPTION]

    case INVESTMENT_ENTITIES.PRODUCT_BACKDROP_IMAGE_URL:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_BACKDROP_IMAGE_URL]

    case INVESTMENT_ENTITIES.PRODUCT_IMAGE_URL:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_IMAGE_URL]

    case INVESTMENT_ENTITIES.PRODUCT_SHOW_CHART:
      return (type, ticker) => [INVESTMENT_ENTITIES.PRODUCTS, type, ticker, INVESTMENT_ENTITIES.PRODUCT_SHOW_CHART]

    case INVESTMENT_ENTITIES.INVESTMENT_INDEX:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`]

    case INVESTMENT_ENTITIES.CID_INDEX :
      return (CID) => [INVESTMENT_ENTITIES.CHILD_MAP, `${CID}`]

    case INVESTMENT_ENTITIES.CHILD_MAP:
      return () => [INVESTMENT_ENTITIES.CHILD_MAP]

    case INVESTMENT_ENTITIES.TRANSACTIONS:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.TRANSACTIONS]

    case INVESTMENT_ENTITIES.TRANSACTION_ID:
      return (GID, tID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.TRANSACTIONS, `${tID}`, INVESTMENT_ENTITIES.TRANSACTION_ID]

    case INVESTMENT_ENTITIES.TRANSACTION_AMOUNT:
      return (GID, tID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.TRANSACTIONS, `${tID}`, INVESTMENT_ENTITIES.TRANSACTION_AMOUNT]

    case INVESTMENT_ENTITIES.TRANSACTION_STATUS:
      return (GID, tID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.TRANSACTIONS, `${tID}`, INVESTMENT_ENTITIES.TRANSACTION_STATUS]

    case INVESTMENT_ENTITIES.TRANSACTION_TYPE:
      return (GID, tID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.TRANSACTIONS, `${tID}`, INVESTMENT_ENTITIES.TRANSACTION_TYPE]

    case INVESTMENT_ENTITIES.TRANSACTION_TIME:
      return (GID, tID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.TRANSACTIONS, `${tID}`, INVESTMENT_ENTITIES.TRANSACTION_TIME]

    case INVESTMENT_ENTITIES.TRANSACTION_STOCKS:
      return (GID, tID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.TRANSACTIONS, `${tID}`, INVESTMENT_ENTITIES.TRANSACTION_STOCKS]

    case INVESTMENT_ENTITIES.INVESTMENT_ID:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_ID]

    case INVESTMENT_ENTITIES.INVESTMENT_TICKER_NAME:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_TICKER_NAME]

    case INVESTMENT_ENTITIES.INVESTMENT_NAME:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_NAME]

    case INVESTMENT_ENTITIES.INVESTMENT_AMOUNT:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_AMOUNT]

    case INVESTMENT_ENTITIES.INVESTMENT_BALANCE:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_BALANCE]

    case INVESTMENT_ENTITIES.CURRENT_VALUE:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.CURRENT_VALUE]

    case INVESTMENT_ENTITIES.PENDING_TRANSFER_AMOUNT:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.PENDING_TRANSFER_AMOUNT]

    case INVESTMENT_ENTITIES.PENDING_WITHDRAWAL_AMOUNT:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.PENDING_WITHDRAWAL_AMOUNT]

    case INVESTMENT_ENTITIES.INVESTMENT_RECURRING_ID:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RECURRING_ID]

    case INVESTMENT_ENTITIES.INVESTMENT_RECURRING_AMOUNT:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RECURRING_AMOUNT]

    case INVESTMENT_ENTITIES.INVESTMENT_RECURRING_FREQUENCY:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RECURRING_FREQUENCY]

    case INVESTMENT_ENTITIES.INVESTMENT_RECURRING_NEXT_DATE:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RECURRING_NEXT_DATE]

    case INVESTMENT_ENTITIES.INVESTMENT_RECURRING_STATUS:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RECURRING_STATUS]

    case INVESTMENT_ENTITIES.INVESTMENT_RECURRING_TYPE:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RECURRING_TYPE]

    case INVESTMENT_ENTITIES.INVESTMENT_TOTAL_CONTRIBUTION:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_TOTAL_CONTRIBUTION]

    case INVESTMENT_ENTITIES.GROWTH_IN_PERCENTAGE:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.GROWTH_IN_PERCENTAGE]

    case INVESTMENT_ENTITIES.GROWTH_IN_VALUE:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.GROWTH_IN_VALUE]

    case INVESTMENT_ENTITIES.LAST_UPDATED_TIME:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.LAST_UPDATED_TIME]

    case INVESTMENT_ENTITIES.STOCKS:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.STOCKS]

    case INVESTMENT_ENTITIES.DUMMY_TRANSACTIONS:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.DUMMY_TRANSACTIONS]

    case INVESTMENT_ENTITIES.INSTRUCTIONS:
      return (GID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS]
    case INVESTMENT_ENTITIES.INSTRUCTION_ID:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_ID]
    case INVESTMENT_ENTITIES.INSTRUCTION_AMOUNT:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_AMOUNT]
    case INVESTMENT_ENTITIES.INSTRUCTION_FREQUENCY:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_FREQUENCY]
    case INVESTMENT_ENTITIES.INSTRUCTION_INITIAL_REQUEST_DATE:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_INITIAL_REQUEST_DATE]
    case INVESTMENT_ENTITIES.INSTRUCTION_NEXT_TRANSFER_DATE:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_NEXT_TRANSFER_DATE]
    case INVESTMENT_ENTITIES.INSTRUCTION_TYPE:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_TYPE]
    case INVESTMENT_ENTITIES.INSTRUCTION_STATUS:
      return (GID, IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${GID}`, INVESTMENT_ENTITIES.INSTRUCTIONS, `${IID}`, INVESTMENT_ENTITIES.INSTRUCTION_STATUS]

    case INVESTMENT_ENTITIES.INVESTMENT_FREQUENCY:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_FREQUENCY]

    case INVESTMENT_ENTITIES.INVESTMENT_RISK_ID:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_RISK_ID]

    case INVESTMENT_ENTITIES.INVESTMENT_PATH_ID:
      return (IID) => [INVESTMENT_ENTITIES.INVESTMENTS, `${IID}`, INVESTMENT_ENTITIES.INVESTMENT_PATH_ID]

    // ----------------------------------

    case INVESTMENT_ENTITIES.IS_OK:
      return () => ['sanity', INVESTMENT_ENTITIES.IS_OK]

    case INVESTMENT_ENTITIES.ERROR:
      return () => ['sanity', INVESTMENT_ENTITIES.ERROR]

    case INVESTMENT_ENTITIES.PROCESSING:
      return () => ['sanity', INVESTMENT_ENTITIES.PROCESSING]
  }
}
