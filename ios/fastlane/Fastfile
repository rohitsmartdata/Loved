default_platform(:ios)

platform :ios do
  before_all do
    cocoapods(use_bundle_exec: false)
  end


  desc "Increment the version and build number"
  lane :version_bump_project do |options|
    # Set build number to current date and time
    build_number = Time.new.strftime("%Y.%m.%d.%H.%M")
    ENV["BUILD_NUMBER"] = build_number
    increment_build_number build_number: build_number
    # Set version number conforming the bump type
    if options[:bump_type]
      increment_version_number bump_type: options[:bump_type]
    end
    ENV["VERSION_NUMBER"] = get_version_number(target: "LovedWealth")
  end

  lane :generateApp do
    xcbuild(
        scheme: "sprout",
        configuration: "TestFlight",
        xcargs: "-sdk iphonesimulator SYMROOT=$HOME"
    )

    #.ipa creation starts
    match(
      type: "appstore"
    )
    gym(
      scheme: "sprout",
      configuration: "Release",
      export_method: "app-store"
    )
    #.ipa creation ends

    sh "zip -r \"$HOME/Loved-\${VERSION_NUMBER}-\${BUILD_NUMBER}\.zip\" $HOME/TestFlight-iphonesimulator/LovedWealth.app"
    sh "zip -r \"$HOME/Loved.zip\" $HOME/TestFlight-iphonesimulator/LovedWealth.app $HOME/git/ios/LovedWealth.ipa"
    sh "zip -r \"$HOME/Loved.zip\" $HOME/TestFlight-iphonesimulator/LovedWealth.app"
    sh "ls -l $HOME"
    sh "ls -l /Users/vagrant/git/ios/"
  end

  lane :testFlightLane do
    match(
      type: "appstore"
    )

    gym(
      scheme: "sprout",
      configuration: "TestFlight",
      export_method: "app-store"
    )
    pilot(
      skip_waiting_for_build_processing: true
    )
  end


  desc "Deploy a new version to the App Store"
  lane :release do
    match(
      type: "appstore"
    )

    gym(
      scheme: "sprout",
      configuration: "Release",
      export_method: "app-store"
    )
    deliver(force: true)
  end

  desc "lovedTestDeploy"
  lane :lovedTestDeploy do
    version_bump_project

    sh "./envScript '../../App/Config/AppConfig.js' 1 \"$VERSION_NUMBER ($BUILD_NUMBER) - UAT1\""
    sh "echo \"Building $VERSION_NUMBER ($BUILD_NUMBER) - UAT1\""
    generateApp

    #sh "./envScript '../../App/Config/AppConfig.js' 1 \"$VERSION_NUMBER ($BUILD_NUMBER) - UAT2A\""
    #sh "echo \"Building $VERSION_NUMBER ($BUILD_NUMBER) - UAT2A\""
    #ipaForBrowserstack

    sh "./exportToBitriseEnv"
  end

  desc "lovedDeploy"
  lane :lovedDeploy do
    version_bump_project

    sh "./envScript '../../App/Config/AppConfig.js' 1 \"$VERSION_NUMBER ($BUILD_NUMBER) - UAT2\""
    sh "echo \"Building $VERSION_NUMBER ($BUILD_NUMBER) - UAT2\""
    testFlightLane

    ENV["BUILD_NUMBER"] = ENV["BUILD_NUMBER"]+".7"
    increment_build_number build_number: ENV["BUILD_NUMBER"]
    sh "./envScript '../../App/Config/AppConfig.js' 2 \"$VERSION_NUMBER ($BUILD_NUMBER) - PROD\""
    sh "echo \"Building $VERSION_NUMBER ($BUILD_NUMBER) - PROD\""
    release

    sh "./exportToBitriseEnv"

  end

  lane :ipaForBrowserstack do
    match(
      type: "adhoc"
    )

    gym(
      scheme: "sprout",
      configuration: "Browserstack",
      export_method: "ad-hoc"
    )

    upload_to_browserstack_app_automate(
      browserstack_username: "ramsubramanian2",
      file_path: "./LovedWealth.ipa",
      browserstack_access_key: "wtyDJszVf38z6RBvQ2kb"
    )
  end

  lane :getProductionCert do
     match(
      type: "appstore"
    )
  end

  lane :getDevCert do
    match(
      type: "development",
      app_identifier: "*",
      force_for_new_devices: true
    )
  end


end
